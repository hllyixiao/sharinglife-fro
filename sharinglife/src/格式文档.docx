export class PersonalInformationComponent implements OnInit {

  public personalInfoForm: FormGroup;
  public imgData: any;
  public avatarImgType = 'image/jpg';
  public avatarImgName = '';
  public cropperSettings: CropperSettings;
  @ViewChild('cropper', undefined)cropper: ImageCropperComponent;

  constructor(
    private fb: FormBuilder,
    private articleService: ArticleService,
    private userService: UserService
    ) { }

  ngOnInit() {
    this.user = this.userService.user;
    this.cropperSettingsInit();
    this.createForm();
  }

  cropperSettingsInit() {
    this.cropperSettings = new CropperSettings();
    this.cropperSettings.croppedWidth = 800;
    this.cropperSettings.croppedHeight = 800;
    this.cropperSettings.rounded = true;
    this.cropperSettings.keepAspect = true;
    this.cropperSettings.noFileInput = true;
    this.imgData = {};
  }

  createForm() {
    this.personalInfoForm = this.fb.group({
        alias: this.user.name ? this.user.name : '',
        sex: this.user.sex ? this.user.sex : '1',
        phone: [this.user.phone ? this.user.phone : '', Validators.required ],
        email: this.user.email ? this.user.email : '',
        motto: this.user.motto ? this.user.motto : ''
    });
}

  fileChangeListener($event) {
    const that = this;
    const image: any = new Image();
    const myReader: FileReader = new FileReader();
    const file: File = $event.target.files[0];
    this.avatarImgName = file.name;
    myReader.onloadend = function (loadEvent: any) {
        image.src = loadEvent.target.result;
        that.cropper.setImage(image);
        that.avatarImgType = 'image/' + _.last(file.name.split('.'));
    };
    myReader.readAsDataURL(file);
  }

  submit() {
    const { entries } = Object;
    const formData = new FormData(this.personalInfoForm.value);
    formData.append('avatar', this.getBlobBydataURI(this.imgData.image, this.avatarImgType), this.avatarImgName);
    for (const [key, value] of entries(this.personalInfoForm.value)) {
      formData.append(key, value.toString());
    }
    this.articleService.updatePersonalInfo(formData).subscribe(
      resp => console.log('updatePersonalInfo')
    );
  }

  getBlobBydataURI(dataURI, type) {
    const binary = atob(dataURI.split(',')[1]);
    const array = [];
    for (let i = 0; i < binary.length; i++) {
        array.push(binary.charCodeAt(i));
    }
    return new Blob([new Uint8Array(array)], {type: type });
  }
}